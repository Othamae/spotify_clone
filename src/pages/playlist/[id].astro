---
import LikePlaylistButton from "@/components/LikePlaylistButton"
import LikeUserPlaylistButton from "@/components/LikeUserPlaylistButton"
import PlayButtonPlaylist from "@/components/PlayButtonPlaylist"
import SongListTable from "@/components/SongListTable.astro"
import UserSongListTable from "@/components/UserSongListTable.astro"
import { allPlaylists, songs } from "@/lib/data"
import type { Image, PlayListTrackObject } from "@/types/types"
import { getDuration, getPlaylist } from "@/utils/playlist"
import Layout from "../../layouts/Layout.astro"
const { id } = Astro.params

const playlist = allPlaylists.find((playlist) => playlist.id === id)
const color = playlist?.color.dark
const playListId = playlist?.albumId

const playListSongs = songs.filter((song) => song.albumId === playlist?.albumId)

const token = Astro.cookies.get("access_token")?.value

let listOfTracks: PlayListTrackObject[] = []
let title = ""
let listOfimages: Image[] = []
let duration = ""
if (token && id) {
  const res = await getPlaylist(token, id)
  const { tracks, images, name } = res
  title = name
  listOfimages = images
  listOfTracks = tracks.items
  let durationInMs = 0
  listOfTracks.map((track) => (durationInMs += track.track.duration_ms))

  duration = getDuration(durationInMs)
}
---

<Layout title="Spotify Clone">
  <div
    id="playlist-container"
    style=`--context-color:${color}`
    class=`relative flex flex-col bg-gradient-to-b from-context overflow-x-hidden p-6`
    transition:name=`playlist ${playlist?.id} box`
  >
    <!-- Header / Login-->
    <header class="flex flex-row gap-6">
      <picture class="aspect-square w-52 h-52 flex-none">
        <img
          src={listOfTracks.length > 1 ? listOfimages[0].url : playlist?.cover}
          alt={listOfTracks.length > 1 ? title : `${playlist?.title}`}
          class="object-cover w-full h-full rounded-md"
          transition:name=`playlist ${playlist?.id} image`
        />
      </picture>
      <div class="flex flex-col mt-6">
        <h2 class="flex flex-1 items-end">Playlist</h2>
        <div>
          <h1 class="text-5xl font-bold block text-white">
            {listOfTracks.length > 1 ? title : `${playlist?.title}`}
            <span transition:name=`playlist ${playlist?.id} title`></span>
          </h1>
        </div>

        <div class="flex-1 flex items-end">
          <div class="text-sm text-gray-400 font-normal">
            <div transition:name=`playlist ${playlist?.id} artists`>
              <span>{playlist?.artists.join(", ")}</span>
            </div>
            <p class="mt-1">
              <span class="text-white"
                >{
                  listOfTracks.length > 1
                    ? listOfTracks.length
                    : playListSongs.length
                } songs</span
              >, about {duration ?? "3 hr 15 min"}
            </p>
          </div>
        </div>
      </div>
    </header>

    <div
      class=`absolute inset-0 bg-gradient-to-b from-[${color}] via-zinc-900/80 -z-[1]`
    >
    </div>

    <!-- <div
      class={`absolute inset-0 ${
        color
          ? `bg-gradient-to-b from-[${color}] via-[${color}]/80`
          : "bg-gradient-to-b from-zinc-900 via-zinc-900/80"
      } -z-[1]`}
    >
    </div> -->
    <!-- <div class="relative z-10 px-2 pt-12"></div> -->

    <div class="flex flex-row pt-6 gap-4 mt-6">
      <PlayButtonPlaylist
        id={id || ""}
        className="p-3 hover:scale-[1.03] hover:bg-green-400/95"
        client:visible
      />
      {
        listOfTracks.length > 1 ? (
          <LikeUserPlaylistButton
            className="w-8 h-8"
            playListId={id || ""}
            client:only
          />
        ) : (
          <LikePlaylistButton
            className="w-8 h-8"
            playList={playlist}
            client:only
          />
        )
      }
    </div>

    <section class="pt-6">
      {
        listOfTracks.length > 1 ? (
          <UserSongListTable tracks={listOfTracks} />
        ) : (
          <SongListTable songs={playListSongs} />
        )
      }
    </section>

    <!--  class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-[1]" -->
  </div>
</Layout>
