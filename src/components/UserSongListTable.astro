---
import ButtonPlayTrack from "@/components/ButtonPlayTrack"
import TimeIcon from "@/icons/Time.astro"
import type { PlayListTrackObject } from "@/types/types"
import { changeDateFormat, getTrackDuration } from "@/utils/playlist"
import LikeTrackButton from "./LikeTrackButton"
import TrackImage from "./TrackImage.astro"
import TrackTitle from "./TrackTitle"
interface Props {
  tracks: PlayListTrackObject[]
}
const { tracks } = Astro.props
---

<table class="table-auto text-left min-w-full divide-y-2 divide-gray-500/20">
  <thead class="text-sm text-zinc-400">
    <th class="pl-4 w-6 text-center text-lg">#</th>
    <th class="px-4 py-2 font-normal">Title</th>
    <th class="px-4 py-2 font-normal">Album</th>
    <th class="px-4 py-2 font-normal">Date added</th>
    <th class="w-6"></th>
    <th class="px-4 py-2 font-normal"><TimeIcon /></th>
  </thead>
  <tbody class="">
    <td class="h-[20px]"></td>
    {
      tracks.map((track, index) => (
        <tr class="group border-separate border-spacing-0 text-sm text-gray-300/80 hover:bg-white/10 hover:text-white transition-all duration-300">
          <td class="pl-4 py-2 rounded-tl-[4px] rounded-bl-[4px] text-base">
            <div class="group relative items-center">
              <ButtonPlayTrack
                songId={track.track.id}
                playlistId={track.track.id}
                index={index + 1}
                client:only
              />
            </div>
          </td>
          <td class="px-4 py-2">
            <div class="playlist-item flex flex-row relative  gap-2  ">
              <TrackImage
                url={track.track.album.images[0].url}
                name={track.track.name}
                artists={track.track.artists}
              />
              <div class="flex flex-auto flex-col px-2 justify-start align-baseline  ">
                <TrackTitle track={track.track} client:only />
              </div>
            </div>
          </td>
          <td class="px-4 py-2">{track.track.album.name}</td>
          <td class="px-4 py-2">{changeDateFormat(track.added_at)}</td>
          <td class=" pt-1">
            <LikeTrackButton
              track={track.track}
              className="w-4 h-4"
              hidden
              client:only
            />
          </td>
          <td class="px-4 py-2 rounded-tr-[4px] rounded-br-[4px] text-zinc-400">
            {getTrackDuration(track.track.duration_ms)}
          </td>
        </tr>
      ))
    }
  </tbody>
</table>
